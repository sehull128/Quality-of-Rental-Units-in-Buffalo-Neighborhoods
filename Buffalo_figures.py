#%%1. Scatterplot of Rental Units in Buffalo that are compliant versus not. Each dot represents the number of rental units# in each neighborhood.import geopandas as gpdimport pandas as pdimport numpy as np import matplotlib.pyplot as pltimport seaborn as snsplt.rcParams['figure.dpi'] = 300sns.set_theme(style="white")registry = pd.read_csv('Rental_Registry.csv', dtype=str)leadcomp = registry.groupby(['Neighborhood', 'Lead Compliance']).size()leadcomp = leadcomp.unstack('Lead Compliance')print(leadcomp)fig, ax1 = plt.subplots()sns.scatterplot(data=leadcomp,x="Y", y="N")ax1.set_title("Buffalo Neighborhood Lead Compliance")ax1.set_xlabel("# of Non-Lead Compliant Rental Units")ax1.set_ylabel("# of Lead Compliant Rental Units")fig.tight_layout()fig.savefig('rental.png')#%%#2. Barchart for percentage of homes that are lead compliant versus not by neighborhoodimport seaborn as snssns.set_theme(style="whitegrid")leadcomp['total'] = leadcomp['Y']+leadcomp['N']leadcomp['pct_Y'] = leadcomp['Y']/leadcomp['total'] * 100leadcomp['pct_N'] = leadcomp['N']/leadcomp['total'] * 100 print(leadcomp['pct_Y'], "Percentage of Lead Compliant Rental Homes")print(leadcomp['pct_N'], "Percentage of Non-Lead Compliant Rental Homes")fig, ax1 = plt.subplots()leadcomp['pct_N'].plot.bar('pct_N', ax=ax1)          ax1.set_xlabel("Neighborhoods in Buffalo")ax1.set_ylabel("Number of homes")ax1.set_title("Percentage of Buffalo rental units that are not lead compliant")fig.tight_layout()fig.savefig('Neighborhoods.png')#%%3. Bar Plot for percentage of rental units in Buffalo neighborhoods that mortgages are 30 days past duewith rental units thirty days past dueimport seabornimport matplotlib.pyplot as pltimport numpy as npimport pandas as pdplt.rcParams['figure.dpi'] = 300sns.set_theme(style="white")delinquency = registry.groupby(['Neighborhood', 'Milestone']).size()delinquency = delinquency.unstack('Milestone')delinquency["total"] = delinquency["30 Days Delinquent"]+delinquency["Fees Due"]+delinquency["Waiting for Renewal Date"]total = delinquency["total"]/ delinquency["total"] * 100thirtyday_pct = delinquency["30 Days Delinquent"] / delinquency["total"] * 100fees_due_pct = delinquency["Fees Due"]/delinquency["total"] * 100renewal_pct = delinquency["Waiting for Renewal Date"] *100fig, ax1 = plt.subplots()thirtyday_pct.plot.bar(thirtyday_pct, ax=ax1)ax1.set_xlabel("Neighborhood in Buffalo")ax1.set_ylabel("% of rental units")ax1.set_title("Percentage of 30 day past due rent on Buffalo rental units")fig.tight_layout()fig.savefig('Delinquency.png')#%%4. Plot comparing Top 5 Neighborhoods with late mortgage payments and # (rate) of lead compliant homesimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as snsplt.rcParams['figure.dpi'] = 300sns.set_theme(style="white")by_milestone = thirtyday_pct.groupby("Neighborhood").sum().astype(float)top_milestone = by_milestone.sort_values()[-10:]print(top_milestone)by_leadcomp = leadcomp['pct_N'].groupby("Neighborhood").sum().astype(float)print(by_leadcomp)top_leadcomp = by_leadcomp.sort_values()[-10:]print(top_leadcomp)fig, (ax1, ax2) = plt.subplots(1,2,dpi=300)fig.suptitle("Highest rates of Delinquent Mortgage Payments and Lead Non-Compliance", fontsize=10)top_milestone.plot.barh(ax=ax1, fontsize=7)ax1.set_ylabel('Percentage of Delinquent Mortgage Payments', fontsize=7)top_leadcomp.plot.bar(ax=ax2,fontsize=7)ax2.set_xlabel('Neighborhood')fig.tight_layout()fig.savefig('Top 10 Neighborhoods in Buffalo.png')